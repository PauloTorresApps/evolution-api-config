services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./src/public:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
      - ./certificado:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    networks:
      - evolution-net
    depends_on:
      - evolution-api
      - redis
      - postgres
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=80"
      - "prometheus.path=/metrics"

  evolution-api:
    container_name: evolution_api
    image: atendai/evolution-api
    networks:
      - evolution-net
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - evolution_instances:/evolution/instances
      - ./evolution-api-data:/app/data
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8080"
      - "prometheus.path=/metrics"

  redis:
      image: redis:latest
      container_name: redis
      command: redis-server --port 6379 --appendonly yes
      restart: always
      volumes:
        - evolution_redis_dev:/data
      ports:
        - "127.0.0.1:6379:6379"
      networks:
        - evolution-net
      labels:
      - "prometheus.scrape=true"
      - "prometheus.port=6379"
      - "prometheus.path=/metrics"

  postgres:
    container_name: postgres
    image: postgres:15
    networks:
      - evolution-net
    command: ["postgres", "-c", "max_connections=1000"]
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=5432"
      - "prometheus.path=/metrics"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - 9090:9090
    networks:
      - evolution-net
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=https://mensageiro.test/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://mensageiro.test/grafana/ # Note a barra no final!
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - evolution-net
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8081:8080"
    networks:
      - evolution-net
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8080"
      - "prometheus.path=/metrics"
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - evolution-net
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=9100"
      - "prometheus.path=/metrics"

volumes:
  evolution_instances:
  evolution_redis_dev:
  postgres_data_dev:
  grafana_data:
  prometheus-data:

networks:
  evolution-net:
    name: evolution-net
    driver: bridge
